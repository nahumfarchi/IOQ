%% 3holes
BLOCK_SIZE = 8000;
LAP_TYPE = 'conn';
PLOT = false;
FACE0 = 1; THETA0 = 0; DEGREE = 4; GVEC = [1,0,0];
INIT_BETA_P = 'round';
N_ITER = 1000;
SEED = 112;
fp = '../data/genus1_small/3holes.off';
m = Mesh(fp); nv = m.nV; V = m.V; F = m.F; ng2 = m.genus*2;
gd = gpuDevice();

%% Option 1a

print_header('Option 1a');

print_header('cpu');
rng(SEED);
tic
[alpha_P1,beta_P1,~,E_hist1,m_hist1] = IOQ_highgenus(V, F, ...
    'Laplacian', LAP_TYPE,...
    'Plot', PLOT,...
    'Iterations', N_ITER, ...
    'highg_method', 'option1a', ...
    'beta_P', INIT_BETA_P);
T1 = toc;

print_header('gpu kernel');
rng(SEED);
tic
[alpha_P2,beta_P2,~,E_hist2,m_hist2] = IOQ_highgenus_gpu(V, F, ...
    'Laplacian', LAP_TYPE,...
    'Plot', PLOT,...
    'Iterations', N_ITER, ...
    'highg_method', 'option1a', ...
    'beta_P', INIT_BETA_P);
wait(gd); T2 = toc;

assert(T2 < T1, 'Option 1 failed!');

print_header('gpu bsx');
rng(SEED);
tic
[alpha_P2,beta_P2,~,E_hist2,m_hist2] = IOQ_highgenus_gpu(V, F, ...
    'Laplacian', LAP_TYPE,...
    'Plot', PLOT,...
    'Iterations', N_ITER, ...
    'highg_method', 'option1a', ...
    'beta_P', INIT_BETA_P, ...
    'bsx', true);
wait(gd); T2 = toc;

assert(T2 < T1, 'Option 1a failed!');

%% Option 1b

print_header('Option 1b');

print_header('cpu');
rng(SEED);
tic
[alpha_P1,beta_P1,~,E_hist1,m_hist1] = IOQ_highgenus(V, F, ...
    'Laplacian', LAP_TYPE,...
    'Plot', PLOT,...
    'Iterations', N_ITER, ...
    'highg_method', 'option1b', ...
    'beta_P', INIT_BETA_P);
T1 = toc;

print_header('gpu');
rng(SEED);
tic
[alpha_P2,beta_P2,~,E_hist2,m_hist2] = IOQ_highgenus_gpu(V, F, ...
    'Laplacian', LAP_TYPE,...
    'Plot', PLOT,...
    'Iterations', N_ITER, ...
    'highg_method', 'option1b', ...
    'beta_P', INIT_BETA_P);
wait(gd); T2 = toc;

assert(T2 < T1, 'Option 1b failed!');

%% Option 2

print_header('Option 2 (n=1)');

print_header('cpu');
rng(SEED);
tic
[alpha_P1,beta_P1,~,E_hist1,m_hist1] = IOQ_highgenus(V, F, ...
    'Laplacian', LAP_TYPE,...
    'Plot', PLOT,...
    'Iterations', N_ITER, ...
    'highg_method', 'option2', ...
    'beta_P', INIT_BETA_P);
T1 = toc;

print_header('gpu');
rng(SEED);
tic
[alpha_P2,beta_P2,~,E_hist2,m_hist2] = IOQ_highgenus_gpu(V, F, ...
    'Laplacian', LAP_TYPE,...
    'Plot', PLOT,...
    'Iterations', N_ITER, ...
    'highg_method', 'option2', ...
    'beta_P', INIT_BETA_P);
wait(gd); T2 = toc;

assert(T2 < T1, 'Option 2 failed!');

print_header('Option 2 (n=2)');

print_header('cpu');
rng(SEED);
tic
[alpha_P1,beta_P1,~,E_hist1,m_hist1] = IOQ_highgenus(V, F, ...
    'Laplacian', LAP_TYPE,...
    'Plot', PLOT,...
    'Iterations', N_ITER, ...
    'highg_method', 'option2', ...
    'beta_P', INIT_BETA_P, ...
    'n_alternating', 2);
T1 = toc;

print_header('gpu');
rng(SEED);
tic
[alpha_P2,beta_P2,~,E_hist2,m_hist2] = IOQ_highgenus_gpu(V, F, ...
    'Laplacian', LAP_TYPE,...
    'Plot', PLOT,...
    'Iterations', N_ITER, ...
    'highg_method', 'option2', ...
    'beta_P', INIT_BETA_P, ...
    'n_alternating', 2);
wait(gd); T2 = toc;

assert(T2 < T1, 'Option 2 failed!');

%% Option 2 optimized

print_header('Option 2 (n=1), kernel');

print_header('cpu');
rng(SEED);
tic
[alpha_P1,beta_P1,~,E_hist1,m_hist1] = IOQ_highgenus(V, F, ...
    'Laplacian', LAP_TYPE,...
    'Plot', PLOT,...
    'Iterations', N_ITER, ...
    'highg_method', 'option2_optimized', ...
    'beta_P', INIT_BETA_P);
T1 = toc;

print_header('gpu');
rng(SEED);
tic
[alpha_P2,beta_P2,~,E_hist2,m_hist2] = IOQ_highgenus_gpu(V, F, ...
    'Laplacian', LAP_TYPE,...
    'Plot', PLOT,...
    'Iterations', N_ITER, ...
    'highg_method', 'option2_optimized', ...
    'beta_P', INIT_BETA_P);
wait(gd); T2 = toc;

assert(T2 < T1, 'Option 2 optimized failed!');

print_header('Option 2 (n=2), kernel');

print_header('cpu');
rng(SEED);
tic
[alpha_P1,beta_P1,~,E_hist1,m_hist1] = IOQ_highgenus(V, F, ...
    'Laplacian', LAP_TYPE,...
    'Plot', PLOT,...
    'Iterations', N_ITER, ...
    'highg_method', 'option2_optimized', ...
    'beta_P', INIT_BETA_P, ...
    'n_alternating', 2);
T1 = toc;

print_header('gpu');
rng(SEED);
tic
[alpha_P2,beta_P2,~,E_hist2,m_hist2] = IOQ_highgenus_gpu(V, F, ...
    'Laplacian', LAP_TYPE,...
    'Plot', PLOT,...
    'Iterations', N_ITER, ...
    'highg_method', 'option2_optimized', ...
    'beta_P', INIT_BETA_P, ...
    'n_alternating', 2);
wait(gd); T2 = toc;

assert(T2 < T1, 'Option 2 optimized failed!');

print_header('Option 2 (n=1), bsx');

print_header('cpu');
rng(SEED);
tic
[alpha_P1,beta_P1,~,E_hist1,m_hist1] = IOQ_highgenus(V, F, ...
    'Laplacian', LAP_TYPE,...
    'Plot', PLOT,...
    'Iterations', N_ITER, ...
    'highg_method', 'option2_optimized', ...
    'beta_P', INIT_BETA_P);
T1 = toc;

print_header('gpu');
rng(SEED);
tic
[alpha_P2,beta_P2,~,E_hist2,m_hist2] = IOQ_highgenus_gpu(V, F, ...
    'Laplacian', LAP_TYPE,...
    'Plot', PLOT,...
    'Iterations', N_ITER, ...
    'highg_method', 'option2_optimized', ...
    'beta_P', INIT_BETA_P, ...
    'bsx', true);
wait(gd); T2 = toc;

assert(T2 < T1, 'Option 2 optimized failed!');

%% Option 3

print_header('Option 3 (n=1), kernel');

print_header('cpu');
rng(SEED);
tic
[alpha_P1,beta_P1,~,E_hist1,m_hist1] = IOQ_highgenus(V, F, ...
    'Laplacian', LAP_TYPE,...
    'Plot', PLOT,...
    'Iterations', N_ITER, ...
    'highg_method', 'option3_optimized', ...
    'beta_P', INIT_BETA_P);
T1 = toc;

print_header('gpu');
rng(SEED);
tic
[alpha_P2,beta_P2,~,E_hist2,m_hist2] = IOQ_highgenus_gpu(V, F, ...
    'Laplacian', LAP_TYPE,...
    'Plot', PLOT,...
    'Iterations', N_ITER, ...
    'highg_method', 'option3_optimized', ...
    'beta_P', INIT_BETA_P);
wait(gd); T2 = toc;

assert(T2 < T1, 'Option 3 optimized failed!');

print_header('Option 3 (n=2) optimized, kernel');

print_header('cpu');
rng(SEED);
tic
[alpha_P1,beta_P1,~,E_hist1,m_hist1] = IOQ_highgenus(V, F, ...
    'Laplacian', LAP_TYPE,...
    'Plot', PLOT,...
    'Iterations', N_ITER, ...
    'highg_method', 'option2_optimized', ...
    'beta_P', INIT_BETA_P, ...
    'n_alternating', 2);
T1 = toc;

print_header('gpu');
rng(SEED);
tic
[alpha_P2,beta_P2,~,E_hist2,m_hist2] = IOQ_highgenus_gpu(V, F, ...
    'Laplacian', LAP_TYPE,...
    'Plot', PLOT,...
    'Iterations', N_ITER, ...
    'highg_method', 'option2_optimized', ...
    'beta_P', INIT_BETA_P, ...
    'n_alternating', 2);
wait(gd); T2 = toc;

assert(T2 < T1, 'Option 3 optimized failed!');

print_header('Option 3 (n=1) optimized, bsx');

print_header('cpu');
rng(SEED);
tic
[alpha_P1,beta_P1,~,E_hist1,m_hist1] = IOQ_highgenus(V, F, ...
    'Laplacian', LAP_TYPE,...
    'Plot', PLOT,...
    'Iterations', N_ITER, ...
    'highg_method', 'option3_optimized', ...
    'beta_P', INIT_BETA_P);
T1 = toc;

print_header('gpu');
rng(SEED);
tic
[alpha_P2,beta_P2,~,E_hist2,m_hist2] = IOQ_highgenus_gpu(V, F, ...
    'Laplacian', LAP_TYPE,...
    'Plot', PLOT,...
    'Iterations', N_ITER, ...
    'highg_method', 'option3_optimized', ...
    'beta_P', INIT_BETA_P, ...
    'bsx', true);
wait(gd); T2 = toc;

assert(T2 < T1, 'Option 2 optimized failed!');