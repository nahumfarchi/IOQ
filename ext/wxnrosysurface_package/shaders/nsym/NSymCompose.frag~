uniform sampler2D img0;
uniform sampler2D img1;
uniform sampler2D blend;

varying vec2 posTexC;
varying vec3 posWorldC;
varying vec3 normal;

vec3 getLight();

void main (void){
	vec3 light = getLight();

	vec3 color0 = vec3(texture2D(img0, posTexC));
	vec3 color1 = vec3(texture2D(img1, posTexC));
	
	float stretchScale = 3.0;
	
	float weight = texture2D(blend, posTexC).a;
	float lum = mix(color1.r, color0.r, weight);
	lum = (stretchScale*(lum - .5) + .6);
	
	gl_FragColor = vec4(light*vec3(lum, lum, lum)*vec3(gl_Color), 1.0);
//	gl_FragColor = mix(vec4(weight, 0.0, 0.0, 1.0),  gl_FragColor, .5);
}

vec3 getLight(){
	vec3 lightVec0 = normalize(vec3(gl_LightSource[0].position) - posWorldC);
	vec3 lightVec1 = normalize(vec3(gl_LightSource[1].position) - posWorldC);
	float intensity0 = dot(lightVec0, normal);
	float intensity1 = dot(lightVec1, normal);
	vec3 light0 = vec3(gl_LightSource[0].ambient) + vec3(gl_LightSource[0].diffuse)*intensity0;
	vec3 light1 = vec3(gl_LightSource[1].ambient) + vec3(gl_LightSource[1].diffuse)*intensity1;

	return (light0 + light1);
}


